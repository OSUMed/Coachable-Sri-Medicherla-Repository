class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        nums.sort()     # sort so we can remove duplicates easy and use 2 pointer technique
        res = []
        for ind in range(len(nums)):
            # check if i is a duplicate
            if ind > 0 and nums[ind] == nums[ind-1]:
                continue

            # ind will be the first triplet, check if it has a double that equals 0
            l, r = ind + 1, len(nums)-1
            
            while l < r:
                totalSum = nums[ind] + nums[l] + nums[r]

                if totalSum < 0:
                    l += 1
                elif totalSum > 0:
                    r -= 1
                else:
                    res.append([nums[ind], nums[l], nums[r]])

                    # remove the duplicates:
                    while l < r and nums[l] == nums[l+1]:
                        l += 1
                    while r > l and nums[r] == nums[r-1]:
                        r -= 1
                    
                    l += 1
                    r -= 1

        return res
            
