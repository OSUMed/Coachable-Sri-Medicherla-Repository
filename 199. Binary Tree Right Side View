class Solution:
    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:
        if not root:
            return []
        queue = collections.deque()
        queue.append(root)
        rightSideView = []

        while queue:
            levelOrder = []
            for i in range(len(queue)):

                # process the current level by collecting them to current level list
                node = queue.popleft()
                levelOrder.append(node.val)

                # add children if they exist
                if node.left:
                    queue.append(node.left)
                if node.right:
                    queue.append(node.right)

            # Add the last item in current level list- it is the right side node for that level
            rightSideView.append(levelOrder[-1])

        return rightSideView
